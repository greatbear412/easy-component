#!/usr/bin/env node

const {
    env
} = require('process');
const path = require("path");
const fs = require("fs");
const pkg = require('../package')
//  命令行接口的完整解决方案，设置一些node命令，如help、usage、version、parse输入的参数
const program = require('commander')

// node终端样式库，可以修改console的输出颜色。
const chalk = require('chalk')

const FileService = require('../utils/files')
const ConfigFilePath = path.resolve(__dirname, '../es.config.js');

/**
 * version
 */
program
    .version(chalk.magenta(`${pkg.version}`))

/**
 * generate
 */
program
    .command('config <config-path>')
    .description('设置配置文件地址。Set config file path.')
    .alias('c')
    .action(ensureConfig)
    .action(require('./config'))

/**
 * generate
 */
program
    .command('generate <component-name>')
    .description('generate a component.')
    .alias('g')
    .action(ensureConfig)
    .action(require('./generate'))

program.parse(process.argv)

// 检查项目配置文件
function ensureConfig(params) {
    if (!FileService.ensureFile(ConfigFilePath)) {
        spinner.fail(`Easy-Component配置文件${ConfigFilePath}不存在，请去github重新获取。`);
        return;
    }
    const sourceCode = fs.readFileSync(ConfigFilePath).toString();
    env.CONFIG_CONTENT = sourceCode;
    env.CONFIG_FILE_PATH = ConfigFilePath;
}


// 模板渲染：handlebars.js
// 文件生成：metalsmith